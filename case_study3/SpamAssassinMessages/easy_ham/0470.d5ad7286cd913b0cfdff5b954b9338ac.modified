{"header": "from fork admin xent com wed sep 4 11 41 44 2002 return path fork admin xent com deliv to yyyi localhost exampl com receiv from localhost jalapeno 127 0 0 1 by jmason org postfix with esmtp id 6a10416f7b for jm localhost wed 4 sep 2002 11 40 03 0100 ist receiv from jalapeno 127 0 0 1 by localhost with imap fetchmail 5 9 0 for jm localhost singl drop wed 04 sep 2002 11 40 03 0100 ist receiv from xent com 64 161 22 236 by dogma slashnul org 8 11 6 8 11 6 with esmtp id g83mkvz05458 for jm jmason org tue 3 sep 2002 23 20 57 0100 receiv from lair xent com localhost 127 0 0 1 by xent com postfix with esmtp id 6f2942940c9 tue 3 sep 2002 15 18 02 0700 pdt deliv to fork exampl com receiv from panacea canon org ns1 canon org 209 115 72 29 by xent com postfix with esmtp id 6b789294099 for fork xent com tue 3 sep 2002 15 17 08 0700 pdt receiv by panacea canon org postfix from userid 1004 id d93f83f4eb tue 3 sep 2002 18 17 30 0400 edt from kragen pobox com kragen sitak to fork exampl com", "body": "subject asynchron i o wa re gasp messag id 20020903221730 d93f83f4eb panacea canon org sender fork admin xent com error to fork admin xent com x beenther fork exampl com x mailman version 2 0 11 preced bulk list help mailto fork request xent com subject help list post mailto fork exampl com list subscrib http xent com mailman listinfo fork mailto fork request xent com subject subscrib list id friend of rohit khare fork xent com list unsubscrib http xent com mailman listinfo fork mailto fork request xent com subject unsubscrib list archiv http xent com pipermail fork date tue 3 sep 2002 18 17 30 0400 edt x spam statu no hit 7 6 requir 7 0 test known mail list quot email text signatur short dens spam phrase 00 01 version 2 41 cv x spam level of cours we ve had select sinc bsd 4 2 and poll sinc system v or so and they work reason well for asynchron i o up to a hundr or so channel but suck after that dev poll avail in solari and linux is one approach to solv thi linux ha a way to do essenti the same thing with real time signal and ha for year and freebsd ha kqueue more detail about these are at http www citi umich edu project linux scalabl none of thi help with disk i o most program that need to overlap disk i o with comput on either proprietari unix or linux just use multipl thread or process to handl the disk i o posix specifi a mechan for nonblock disk i o that most proprietari unix implement the linux kernel hacker are current rewrit linux s entir i o subsystem essenti from scratch to work asynchron becaus they can easili build effici synchron i o primit from asynchron one but not the other way around so now linux will support thi mechan too it probabl doesn t need say for anyon who s read beberg say thing like memori manag is a non issu for anyon that ha ani idea at all how the hardwar function but he s total off base peopl should know by now not to take anyth he say serious but appar some don t so i ll rebut not surprisingli the rebutt requir mani more word than the origin stupid error in detail he wrote could it be after 20 year without thi featur unix final catch up to window and ha i o that doesnt sic total suck for nontrivi app no way unix acquir nonblock i o in the form of select about 23 year ago and solari ha had the particular aio call we are discuss for mani year veri few applic need the aio call essenti onli high perform rdbm server even benefit from them at all and most of those have been fake it fine for a while with multipl thread or process thi just provid a modicum of extra perform ok so they do it with signal or a flag which is complet ghetto but at least they are tri keep tri guy you got the idea but not the clue reader can judg who lack the clue here the window i o model doe defin sic blow the door off the unix one but then they had select to point at in it s sic sucki and anyth would have been an improv unix is just now look at it s sic i o model and adapt to a multiprocess multithread world so it s gon na be year yet befor a posix api come out of it although i don t have a copi of the spec handi i think the aio api come from the posix spec ieee std 1003 1 1990 section 6 7 9 which is 13 year old and which i think document then current practic they might be even older than that unix ha been multiprocess sinc 1969 and most unix implement have support multithread for a decad or more bottom line is the do stuff when someth happen model turn out to be right and the unix look for someth to do and keep look till you find it no matter how mani time you have to look is not realli work so great anymor linux s aio routin can notifi the process of their complet with a signal a featur miss in microsoft window a signal caus the immedi execut of a signal handler in a process by contrast the microsoft window mechan to do similar thing such as complet port do not deliv a notif until the process poll them i don t think signal are a better way to do thing in thi case although i haven t written ani rdbmse myself but you got the technic descript of the two oper system exactli backward most program that use linux real time signal for asynchron network i o in fact block the signal in question and poll the signal queue in a veri windowsish way use sigtimedwait or sigwaitinfo kragen pobox com kragen sitak http www pobox com kragen edsger wybe dijkstra die in august of 2002 thi is a terribl loss after which the world will never be the same http www xent com pipermail fork 2002 august 013974 html"}